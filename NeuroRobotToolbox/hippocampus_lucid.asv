
%% Lucid dream
% Demo Sleep:Hippocampus


% try this:
% % randomly extract image index to display some images 
% idx=randperm(numel(imds.Files),20);
% % use readByIndex function to read images from the autmented datastore
% imgEx=readByIndex(augImds,idx);
% % to show the tiled images
% figure;montage(imgEx.input);title('example of the dataset')


% image_dir = dir(fullfile(strcat(data_dir_name, rec_dir_name), '**\*.png'));
% torque_dir = dir(fullfile(strcat(data_dir_name, rec_dir_name), '**\*torques.mat'));
% save(strcat(shared_data_dir_name, 'image_dir'), 'image_dir')
% save(strcat(shared_data_dir_name, 'torque_dir'), 'torque_dir')
% load(strcat(shared_data_dir_name, 'image_dir'))
% load(strcat(shared_data_dir_name, 'torque_dir'))
% load(strcat(shared_data_dir_name, 'livingroom_net'))
load(strcat(shared_data_dir_name, 'livingroom_labels'))

ntorques = size(torque_dir, 1);
nimages = size(image_dir, 1);
ntuples = size(torque_dir, 1);
disp(horzcat('ntuples: ', num2str(ntuples)))
unique_states = unique(labels);
n_unique_states = length(unique_states);
disp(horzcat('n unique states: ', num2str(n_unique_states)))


%% Prepare
figure(6)
clf
set(gcf, 'position', [80 80 1320 600], 'color', 'w')
ax1 = axes('position', [0.05 0.1 0.4 0.85]);
im1 = image(zeros(227, 227, 3, 'uint8'));
set(gca, 'xtick', [], 'ytick', [])
tx1 = title('');
ax2 = axes('position', [0.55 0.1 0.4 0.85]);
im2 = image(zeros(227, 227, 3, 'uint8'));
set(gca, 'xtick', [], 'ytick', [])
tx2 = title('');
ax3 = axes('position', [0.3 0.025 0.4 0.05], 'xcolor', 'w', 'ycolor', 'w');
set(gca, 'xtick', [], 'ytick', [])
tx3 = text(0.25, 0.5, 'Pre:', 'HorizontalAlignment','center');


%%
rinds = randsample(ntuples, ntuples, 0);
for ntuple = rinds'

    this_ind = ntuple*2-1;    
    left_im = imread(strcat(image_dir(this_ind).folder, '\',  image_dir(this_ind).name));
    left_im_small = imresize(left_im, [imdim imdim]);
    [left_state, left_score] = classify(net, left_im_small);
    left_state = find(unique_states == left_state);
    left_score = left_score(left_state);
    im1.CData = left_im;
    tx1.String = horzcat('Tuple: ', num2str(ntuple), ', state: ', num2str(left_state), ' (', char(labels(left_state)), '), conf: ', num2str(left_score));

    this_ind = ntuple*2;    
    right_im = imread(strcat(image_dir(this_ind).folder, '\',  image_dir(this_ind).name));
    right_im_small = imresize(right_im, [imdim imdim]);
    [right_state, right_score] = classify(net, right_im_small);
    right_state = find(unique_states == right_state);
    right_score = right_score(right_state);
    im2.CData = right_im;
    tx2.String = horzcat('Tuple: ', num2str(ntuple), ', state: ', num2str(right_state), ' (', labels(right_state), '), conf: ', num2str(right_score));

%     best_score = state_info(left_state, 2);
%     best_ind = state_info(left_state, 3);
%     this_im = imread(imageIndex.ImageLocation{best_ind});
%     im2.CData = this_im;
%     tx2.String = horzcat('Max selfsim tuple: ', num2str(best_ind), ' from state ', num2str(left_state), ' (', labels(states(left_state)), '), whose avg selfsim is: ', num2str(best_score));

%     this_motor_vector = torque_data(ntuple, :);
    
%     clc 
%     disp(horzcat('ntuple: ', num2str(ntuple)))
%     disp(horzcat('torques: ', num2str(round(this_motor_vector))))

    drawnow
    pause

end

